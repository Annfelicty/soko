# app/models.py
from typing import Optional
from datetime import datetime
from sqlmodel import SQLModel, Field, Relationship

class User(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    phone: str = Field(index=True, unique=True)
    name: Optional[str] = None
    created_at: datetime = Field(default_factory=datetime.utcnow)

class Transaction(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    amount: float
    currency: str = "KES"
    tx_type: Optional[str] = None  # e.g., "PAYMENT", "RECEIVE"
    source: Optional[str] = None   # e.g., "M-PESA", "Manual"
    timestamp: datetime = Field(default_factory=datetime.utcnow)
    raw_sms: Optional[str] = None

class Receipt(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    transaction_id: int = Field(foreign_key="transaction.id")
    created_at: datetime = Field(default_factory=datetime.utcnow)
    # optionally store path or keep generated bytes in storage (not in DB)

class SavingsGoal(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    target_amount: float = 0.0
    current_amount: float = 0.0
    name: Optional[str] = None

class FraudAlert(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    sms_text: str
    score: float
    flagged: bool = False
    created_at: datetime = Field(default_factory=datetime.utcnow)
